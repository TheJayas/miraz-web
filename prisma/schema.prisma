// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Test {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  completed Boolean
}

model Event {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  name                 String
  club                 String
  tagline              String
  shortSummary         String
  longSummary          String
  description          String
  image                String
  rulebookLink         String
  problemStatementLink String
  submissionLink       String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  startTime            DateTime
  endTime              DateTime
  isLive               Boolean
  status               String
  prizeWorth           Int
  teamMaxSize          Int
  teamMinSize          Int
}

model Coordinator {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  contact String
  eventId String @db.ObjectId
}

model Prize {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  first  Int
  second Int
  third  Int

  eventId String @unique @db.ObjectId
}

model MirazTeamMember {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Faq {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sponsor {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  image     String
  link      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Timeline {
  id    String   @id @default(auto()) @map("_id") @db.ObjectId
  date  DateTime
  title String
}

model Keytalk {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  time  String

  speakers Speaker[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Speaker {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  image         String
  qualification String
  bio           String?
  link          String

  keytalkId String?  @db.ObjectId
  keytalk   Keytalk? @relation(fields: [keytalkId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
